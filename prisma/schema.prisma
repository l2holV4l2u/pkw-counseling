generator client {
  provider = "prisma-client-js"
}

generator zod {
  provider                  = "zod-prisma-types"
  createRelationValuesTypes = "true"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
}

model User {
  id              String    @id @default(uuid())
  email           String?   @unique
  password        String
  updatedAt       DateTime  @default(now()) @updatedAt
  role            String    // "student" | "teacher" | "admin" | etc.
  title           String?
  firstName       String?
  lastName        String?
  studentId       String?   @unique
  profileUrl      String?

  // Student fields
  schoolYear      String?
  seatNumber      Int?
  roomId          String?
  room            Room?     @relation(fields: [roomId], references: [id])

  // Teacher fields
  homeroom        Room?     @relation("HomeroomTeacher", fields: [homeroomId], references: [id])
  homeroomId      String?   @unique

  // Relations
  tgatScore       TGATScore?
  tpatScore       TPATScore?
  alevelScore     ALevelScore?
  uniChoices      UniChoice[]
}

model Room {
  id        String   @id @default(uuid())
  label     String
  grade     Int
  roomNo    Int

  // Students in this room
  users     User[]   // students

  // Homeroom teacher
  homeroomTeacher User? @relation("HomeroomTeacher")

  @@unique([grade, roomNo])
}

model TGATScore {
  id     String @id @default(uuid())
  userId String @unique
  user   User   @relation(fields: [userId], references: [id])

  tgat1  Int?
  tgat2  Int?
  tgat3  Int?
}

model TPATScore {
  id     String @id @default(uuid())
  userId String @unique
  user   User   @relation(fields: [userId], references: [id])

  tpat1  Int?
  tpat2  Int?
  tpat3  Int?
  tpat4  Int?
  tpat5  Int?
}

model ALevelScore {
  id     String @id @default(uuid())
  userId String @unique
  user   User   @relation(fields: [userId], references: [id])

  alevel61 Int? // คณิตศาสตร์ประยุกต์ 1 (พื้นฐาน + เพิ่มเติม)
  alevel62 Int? // คณิตศาสตร์ประยุกต์ 2
  alevel63 Int? // วิทยาศาสตร์ประยุกต์
  alevel64 Int? // ฟิสิกส์
  alevel65 Int? // เคมี
  alevel66 Int? // ชีววิทยา

  alevel70 Int? // สังคมศึกษา

  alevel81 Int? // ภาษาไทย
  alevel82 Int? // ภาษาอังกฤษ
  alevel83 Int? // ภาษาฝรั่งเศส
  alevel84 Int? // ภาษาเยอรมัน
  alevel85 Int? // ภาษาญี่ปุ่น
  alevel86 Int? // ภาษาเกาหลี
  alevel87 Int? // ภาษาจีน
  alevel88 Int? // ภาษาบาลี
  alevel89 Int? // ภาษาสเปน
}

model UniChoice{
  id        String  @id @default(uuid())
  userId    String
  programId String
  order     Int
  user      User   @relation(fields: [userId], references: [id])
}

model EmailVerification {
  id         String   @id @default(uuid())
  email      String   @unique
  otp        String
  expiresAt  DateTime
  createdAt  DateTime @default(now())
}